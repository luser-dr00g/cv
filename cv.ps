%!PS
%CV/Quine Demo
20 dict begin /quinedict currentdict def /hack (
2 dict dup/Duplex true put dup/Tumble false put/setpagedevice dup where{pop cvx exec}{pop pop}ifelse
{/top { 45 582 } def /bot 440 def /lnum 0 def /++ { dup dup load 1 add store load } def
/line{ gsave /lnum ++ (    ) cvs gsave -10 0 rmoveto rline grestore show grestore }def %line numbers
/newpage { gsave 0 792 translate -90 rotate T top moveto } def /realsp /showpage load def
/showpage { grestore /newpage{T 45 760 moveto /bot 0 def}def /showpage /realsp load def} def
1 dict begin /prog currentfile 1e5 cvi string readstring pop def ({ //prog cvx end exec
//quinedict begin /T 7 7.6 /Courier fontproc def newpage (%!PS
%CV/Quine Demo
20 dict begin /quinedict currentdict def /hack  ) dup dup length 1 sub 16#28 put par %type prolog
//hack dup length 2 sub 1 exch getinterval par                                       %type hack
(  def hack cvx exec) dup 0 16#29 put par                                            %type seam
//prog dup length 2 sub 1 exch getinterval par                                       %type prog
420 100 translate .27 .27 scale 0 0 612 792 4 copy rectclip rectstroke //prog cvx end exec %thumb
}) token pop exch pop end exec} exec quit                    %stitch proc, end progdict, execute
) def hack cvx exec 

%!PS
%Simple Typesetting Engine with Justified paragraphs
/margin 72 def /box [ clippath pathbbox ] def /left margin 30 add def
/top [ left box 3 get margin sub ] cvx def /right box 2 get margin sub def
/bot margin def /newpage { T top moveto } def /sigil<5E>def 
/br  { 0 lead neg rmoveto } def /hbr { 0 lead -0.5 mul rmoveto } def
/cr { left currentpoint exch pop moveto } def /buf <<>> def /++ { dup load 1 add store } def
/hr { gsave right left add 2 div  currentpoint exch pop translate
    7.2 dup scale -32 -1 moveto -28 -3 -20 -3 0 0 curveto
    currentpoint strokepath currentlinewidth dup 72 div setlinewidth stroke setlinewidth
    moveto 20 3 28 3 32 -1 curveto 1 setflat 
    strokepath currentlinewidth dup 72 div setlinewidth stroke setlinewidth grestore br } def
/rline { gsave dup stringwidth pop neg 0 rmoveto show grestore } def
/line { gsave sigil{search{show exch token pop exec exch}{show exit}ifelse}loop grestore } def
/par { (\n) { search exch line not { exit } if br
    currentpoint exch pop bot lt { showpage newpage } if } loop br } def
/last { buf buf length 1 sub get 0 get } def
/append { buf length 0 gt { dup 0 get 0 1 getinterval (\).,) exch search { pop pop last ( ) eq
    { buf buf length 1 sub undef } if } if pop } if buf exch buf length exch put } def
/push { dup 0 get () eq {pop}{ dup 0 get ( ) eq { buf length 0 eq {pop}{ last ( ) eq {pop}{
    append } ifelse } ifelse }{ append } ifelse } ifelse } def
/trim { buf length 0 gt {last ( ) eq { buf buf length 1 sub undef } if } if } def
/buffor{ buf 0 get 0 get ( ) eq {1}{0} ifelse  1
    buf length last ( ) eq {2}{1} ifelse sub  4 3 roll
    {buf exch get} /exec cvx 3 2 roll /exec cvx 4 array astore cvx  for } def
/dump {0 {spaces s} argsbegin { 0 get ( ) eq {/spaces ++} if } buffor
  cr { aload pop pop setfont stringwidth rmoveto } buffor /gap right currentpoint pop sub def
  /spaceadjust gap spaces dup 0 eq {pop 1} if div def cr { aload pop /lead exch def setfont
    {dup ==only}pop s } buffor cr br end /buf <<>> def {/ =}pop } def
/accum {dup currentpoint pop exch stringwidth pop add right gt {{spaceadjust 0 32 4 3 roll
    widthshow} dump } if dup stringwidth rmoveto [ exch currentfont lead ] push } def
/jtext { ( ) { search exch dup (\() eq {accum}{accum ( ) accum} ifelse not{exit}if } loop } def
/jpar { sigil{search{jtext exch token pop exec exch}{jtext exit}ifelse}loop {show} dump } def
/settab{/tabstop currentpoint pop def}def /tab{tabstop currentpoint exch pop moveto}def
/argsbegin{ dup length dict begin {exch def} forall } def /proc { token pop exch pop } def
/fontproc {{name lead x} argsbegin ({//name //x selectfont /lead //lead def}) proc bind end } def
/I 10 11 /Palatino-Italic fontproc def /R 10 11 /Palatino-Roman fontproc def
/H 18 16 /Palatino-Roman fontproc def
/B {/Palatino-Roman findfont [14 0 0 10 0 0] makefont setfont /lead 13 def} def
/T {/Courier findfont [9 0 0 10 0 0] makefont setfont /lead 11 def} def

(1978-        ) newpage rline
(Michael Joshua Ryan         ^settab ^T luser.droog@gmail.com) H par
(3447 Connecticut St. 104    ^tab 202-494-2570
St. Louis, MO 63118) R hbr par

(Objective) br B line br
(To combine Renaissance aesthetics, cosmopolitan ethics, and scientific technique \
in the critique and construction of physical and conceptual artifacts.) R hbr jpar
br br hr br br

(Education) br B line br
 (Dec 2020    ) T hbr rline
(BSCS University of Missouri - St. Louis (expected)) R par

(Employment) br B line br
(1998-2001    ) T hbr rline
(Student Programmer, UM - St. Louis Registrar's Office. Perform ^T MARKIV ^R mainframe \
database queries (^T MVS/TSO^R) and reformat data (^T U^{currentfont [.73 0 0 .8 0 0]
makefont setfont trim}NIX^R) to produce reports (Line-Printer) and address labels \
using ^T Postscript^R . One interesting project was producing the data for a student \
directory with embedded Quark tags. Developed a system for interactive queries \
and accellerated data entry using WinBatch.) R jpar
(2002-2019    ) T hbr rline
(Barista, Starbucks Coffee Co.) R par

(Extracurricular) br B line br
(1989-        ) T hbr rline
(Study the guitar, piano, bass, clarinet, music theory, songwriting. Rock, Folk, \
Jazz, Ragtime, Blues, Classical, Flamenco. UMSL Jazz Band, Jazz Ensemble, Pep Band, \
Concert Band.) R jpar
(1998-1999    ) T hbr rline
("Redaktor" of the Pierre Laclede Honors College Student Association's ^I Brain Stew. \
^R Designed and Edited monthly magazine using Pagemaker and various other tools.) R jpar
(1999-2000    ) T hbr rline
(Treasurer of the UMSL ACM Chapter. ^I Requisitioned "first" computer!) R jpar
(1998-2003    ) T hbr rline 
(Intense interest in programming languages and language implementation, \
graphics and graphics programming.) R jpar
(2007-present ) T hbr rline
(Began the xpost project with a goal to implement a clone of Sun Microsystems' \
^I NeWS ^R graphical programming interface for ^T U^{currentfont [.73 0 0 .8 0 0] 
makefont setfont trim}NIX^R . Participated in internet programming fora: \
^T comp.lang.c, comp.lang.postscript, stackoverflow.com ^R under the name ^I luser \
droog ^R , contributing programs, answers and questions.) R jpar
(2014-present ) T hbr rline
(Performed in local musicals with Stray Dog Theatre and Ignite Theatre \
on electric bass, upright bass, and electric guitar.) R jpar

(Portfolio) br B line R br
(2008-present ) T hbr rline
(xpost: A Level-1 Postscript Interpreter for GNU/Linux/X11 \
(^T github.com/luser-dr00g/xpost^R).
debug.ps: A portable Debugger for PostScript (^T github.com/luser-dr00g/debug.ps^R).
pcomb: Parser Combinators in C (^T github.com/luser-dr00g/pcomb^R).) R par
showpage
